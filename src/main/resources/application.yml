# FireSentinel Application Configuration
spring:
  application:
    name: fire-sentinel
  
  # Database Configuration (TimescaleDB/PostgreSQL)
  datasource:
    url: jdbc:postgresql://localhost:5432/firesentinel
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  # JPA/Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
    show-sql: false
  
  # Redis Configuration
  redis:
    host: localhost
    port: 6379
    password: 
    database: 0
    timeout: 60000
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
    consumer:
      group-id: firesentinel-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.firesentinel.*
    topics:
      sensor-data: sensor-data-topic
      alarm-events: alarm-events-topic
  
  # Security Configuration (OAuth2)
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_CLIENT_ID:your-client-id}
            client-secret: ${OAUTH2_CLIENT_SECRET:your-client-secret}
            scope:
              - email
              - profile

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain
    min-response-size: 1024

# Netty Server Configuration
netty:
  server:
    port: 9090
    boss-threads: 1
    worker-threads: 4
    so-backlog: 128
    so-keepalive: true
    tcp-nodelay: true

# Cache Configuration
cache:
  caffeine:
    spec: maximumSize=500,expireAfterWrite=300s
  redis:
    time-to-live: 600
  bloom-filter:
    expected-insertions: 10000
    false-positive-probability: 0.01

# Logging Configuration
logging:
  level:
    root: INFO
    com.firesentinel: DEBUG
    org.springframework: INFO
    org.hibernate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/firesentinel.log
    max-size: 10MB
    max-history: 7 